spin_manifest_version = 2

[application]
name = "coretools"
version = "0.1.0"
authors = ["Corey Ryan <corey@coreyr.com>"]
description = "Core computational tools MCP server"

[variables]
# List all tool components that should be discovered by the gateway
# Each component hosts exactly one tool due to WASM constraints
tool_components = { default = "distance,bearing,dot-product,polygon-area,point-in-polygon,coordinate-conversion,cross-product,vector-magnitude,line-intersection,buffer-polygon,proximity-search,proximity-zone" }

[[trigger.http]]
route = "/mcp"
component = "ftl-mcp-gateway"

[component.ftl-mcp-gateway]
source = { registry = "ghcr.io", package = "fastertools:ftl-mcp-gateway", version = "0.0.3" }
allowed_outbound_hosts = ["http://*.spin.internal"]
[component.ftl-mcp-gateway.variables]
tool_components = "{{ tool_components }}"
validate_arguments = "true"

[[trigger.http]]
route = "/distance"
component = "distance"

[component.distance]
source = "tools/geospatial/distance/target/wasm32-wasip1/release/distance_tool.wasm"
allowed_outbound_hosts = []
[component.distance.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/geospatial/distance"
watch = ["tools/geospatial/distance/src/**/*.rs", "tools/geospatial/distance/Cargo.toml"]

[[trigger.http]]
route = "/bearing"
component = "bearing"

[component.bearing]
source = "tools/geospatial/bearing/target/wasm32-wasip1/release/bearing_tool.wasm"
allowed_outbound_hosts = []
[component.bearing.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/geospatial/bearing"
watch = ["tools/geospatial/bearing/src/**/*.rs", "tools/geospatial/bearing/Cargo.toml"]

[[trigger.http]]
route = "/dot-product"
component = "dot-product"

[component.dot-product]
source = "tools/math3d/dot_product/target/wasm32-wasip1/release/dot_product_tool.wasm"
allowed_outbound_hosts = []
[component.dot-product.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/dot_product"
watch = ["tools/math3d/dot_product/src/**/*.rs", "tools/math3d/dot_product/Cargo.toml"]

[[trigger.http]]
route = "/polygon-area"
component = "polygon-area"

[component.polygon-area]
source = "tools/geospatial/polygon_area/target/wasm32-wasip1/release/polygon_area_tool.wasm"
allowed_outbound_hosts = []
[component.polygon-area.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/geospatial/polygon_area"
watch = ["tools/geospatial/polygon_area/src/**/*.rs", "tools/geospatial/polygon_area/Cargo.toml"]

[[trigger.http]]
route = "/point-in-polygon"
component = "point-in-polygon"

[component.point-in-polygon]
source = "tools/geospatial/point_in_polygon/target/wasm32-wasip1/release/point_in_polygon_tool.wasm"
allowed_outbound_hosts = []
[component.point-in-polygon.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/geospatial/point_in_polygon"
watch = ["tools/geospatial/point_in_polygon/src/**/*.rs", "tools/geospatial/point_in_polygon/Cargo.toml"]

[[trigger.http]]
route = "/coordinate-conversion"
component = "coordinate-conversion"

[component.coordinate-conversion]
source = "tools/geospatial/coordinate_conversion/target/wasm32-wasip1/release/coordinate_conversion_tool.wasm"
allowed_outbound_hosts = []
[component.coordinate-conversion.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/geospatial/coordinate_conversion"
watch = ["tools/geospatial/coordinate_conversion/src/**/*.rs", "tools/geospatial/coordinate_conversion/Cargo.toml"]

[[trigger.http]]
route = "/cross-product"
component = "cross-product"

[component.cross-product]
source = "tools/math3d/cross_product/target/wasm32-wasip1/release/cross_product_tool.wasm"
allowed_outbound_hosts = []
[component.cross-product.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/cross_product"
watch = ["tools/math3d/cross_product/src/**/*.rs", "tools/math3d/cross_product/Cargo.toml"]

[[trigger.http]]
route = "/vector-magnitude"
component = "vector-magnitude"

[component.vector-magnitude]
source = "tools/math3d/vector_magnitude/target/wasm32-wasip1/release/vector_magnitude_tool.wasm"
allowed_outbound_hosts = []
[component.vector-magnitude.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/vector_magnitude"
watch = ["tools/math3d/vector_magnitude/src/**/*.rs", "tools/math3d/vector_magnitude/Cargo.toml"]

[[trigger.http]]
route = "/line-intersection"
component = "line-intersection"

[component.line-intersection]
source = "tools/math3d/line_intersection/target/wasm32-wasip1/release/line_intersection_tool.wasm"
allowed_outbound_hosts = []
[component.line-intersection.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/line_intersection"
watch = ["tools/math3d/line_intersection/src/**/*.rs", "tools/math3d/line_intersection/Cargo.toml"]

[[trigger.http]]
route = "/buffer-polygon"
component = "buffer-polygon"

[component.buffer-polygon]
source = "tools/geospatial/buffer_polygon/target/wasm32-wasip1/release/buffer_polygon_tool.wasm"
allowed_outbound_hosts = []
[component.buffer-polygon.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/geospatial/buffer_polygon"
watch = ["tools/geospatial/buffer_polygon/src/**/*.rs", "tools/geospatial/buffer_polygon/Cargo.toml"]

[[trigger.http]]
route = "/proximity-search"
component = "proximity-search"

[component.proximity-search]
source = "tools/geospatial/proximity_search/target/wasm32-wasip1/release/proximity_search_tool.wasm"
allowed_outbound_hosts = []
[component.proximity-search.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/geospatial/proximity_search"
watch = ["tools/geospatial/proximity_search/src/**/*.rs", "tools/geospatial/proximity_search/Cargo.toml"]

[[trigger.http]]
route = "/proximity-zone"
component = "proximity-zone"

[component.proximity-zone]
source = "tools/geospatial/proximity_zone/target/wasm32-wasip1/release/proximity_zone_tool.wasm"
allowed_outbound_hosts = []
[component.proximity-zone.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/geospatial/proximity_zone"
watch = ["tools/geospatial/proximity_zone/src/**/*.rs", "tools/geospatial/proximity_zone/Cargo.toml"]


