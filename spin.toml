spin_manifest_version = 2

[application]
name = "coretools"
version = "0.1.0"
authors = ["Corey Ryan <corey@coreyr.com>"]
description = "Core computational tools MCP server"

[variables]
# List all tool components that should be discovered by the gateway
# Each component hosts exactly one tool due to WASM constraints
tool_components = { default = "distance,bearing,dot-product,polygon-area,point-in-polygon,coordinate-conversion,cross-product,vector-magnitude,line-intersection,buffer-polygon,proximity-search,proximity-zone,add,multiply,square,sqrt,pythagorean,distance-two-d,line-plane-intersection,plane-plane-intersection,point-plane-distance,rotation-matrix,arbitrary-rotation,quaternion-from-axis-angle,quaternion-multiply,quaternion-slerp,matrix-vector-multiply,coordinate-conversion-three-d,tetrahedron-volume,sphere-volume,cylinder-volume,aabb-volume,pyramid-volume,sphere-ray-intersection,sphere-sphere-intersection,cylinder-ray-intersection,ray-aabb-intersection,point-line-distance,descriptive-statistics,summary-statistics,pearson-correlation,spearman-correlation,correlation-matrix,linear-regression,histogram,predict-values,polynomial-regression,test-normality,analyze-distribution,polygon-simplification,vector-angle,line-segment-intersection,multiple-line-intersection,subtract,divide,remainder,modulus,power,uuid-generator,current-datetime,base64-encoder,base64-decoder,random-integer,random-string,url-encoder,url-decoder,hex-encoder,hex-decoder,string-case-converter,string-trimmer,string-splitter,json-formatter,json-validator,email-validator,hash-generator,url-validator,regex-matcher,csv-parser,yaml-formatter" }

[[trigger.http]]
route = "/mcp"
component = "ftl-mcp-gateway"

[component.ftl-mcp-gateway]
source = { registry = "ghcr.io", package = "fastertools:ftl-mcp-gateway", version = "0.0.3" }
allowed_outbound_hosts = ["http://*.spin.internal"]
[component.ftl-mcp-gateway.variables]
tool_components = "{{ tool_components }}"
validate_arguments = "true"

[[trigger.http]]
route = "/distance"
component = "distance"

[component.distance]
source = "target/wasm32-wasip1/release/distance_tool.wasm"
allowed_outbound_hosts = []
[component.distance.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/geospatial/distance"
watch = ["tools/geospatial/distance/src/**/*.rs", "tools/geospatial/distance/Cargo.toml"]

[[trigger.http]]
route = "/bearing"
component = "bearing"

[component.bearing]
source = "target/wasm32-wasip1/release/bearing_tool.wasm"
allowed_outbound_hosts = []
[component.bearing.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/geospatial/bearing"
watch = ["tools/geospatial/bearing/src/**/*.rs", "tools/geospatial/bearing/Cargo.toml"]

[[trigger.http]]
route = "/dot-product"
component = "dot-product"

[component.dot-product]
source = "target/wasm32-wasip1/release/dot_product_tool.wasm"
allowed_outbound_hosts = []
[component.dot-product.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/dot_product"
watch = ["tools/math3d/dot_product/src/**/*.rs", "tools/math3d/dot_product/Cargo.toml"]

[[trigger.http]]
route = "/polygon-area"
component = "polygon-area"

[component.polygon-area]
source = "target/wasm32-wasip1/release/polygon_area_tool.wasm"
allowed_outbound_hosts = []
[component.polygon-area.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/geospatial/polygon_area"
watch = ["tools/geospatial/polygon_area/src/**/*.rs", "tools/geospatial/polygon_area/Cargo.toml"]

[[trigger.http]]
route = "/point-in-polygon"
component = "point-in-polygon"

[component.point-in-polygon]
source = "target/wasm32-wasip1/release/point_in_polygon_tool.wasm"
allowed_outbound_hosts = []
[component.point-in-polygon.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/geospatial/point_in_polygon"
watch = ["tools/geospatial/point_in_polygon/src/**/*.rs", "tools/geospatial/point_in_polygon/Cargo.toml"]

[[trigger.http]]
route = "/coordinate-conversion"
component = "coordinate-conversion"

[component.coordinate-conversion]
source = "target/wasm32-wasip1/release/geospatial_coordinate_conversion_tool.wasm"
allowed_outbound_hosts = []
[component.coordinate-conversion.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/geospatial/coordinate_conversion"
watch = ["tools/geospatial/coordinate_conversion/src/**/*.rs", "tools/geospatial/coordinate_conversion/Cargo.toml"]

[[trigger.http]]
route = "/cross-product"
component = "cross-product"

[component.cross-product]
source = "target/wasm32-wasip1/release/cross_product_tool.wasm"
allowed_outbound_hosts = []
[component.cross-product.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/cross_product"
watch = ["tools/math3d/cross_product/src/**/*.rs", "tools/math3d/cross_product/Cargo.toml"]

[[trigger.http]]
route = "/vector-magnitude"
component = "vector-magnitude"

[component.vector-magnitude]
source = "target/wasm32-wasip1/release/vector_magnitude.wasm"
allowed_outbound_hosts = []
[component.vector-magnitude.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/vector_magnitude"
watch = ["tools/math3d/vector_magnitude/src/**/*.rs", "tools/math3d/vector_magnitude/Cargo.toml"]

[[trigger.http]]
route = "/line-intersection"
component = "line-intersection"

[component.line-intersection]
source = "target/wasm32-wasip1/release/line_intersection_tool.wasm"
allowed_outbound_hosts = []
[component.line-intersection.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/line_intersection"
watch = ["tools/math3d/line_intersection/src/**/*.rs", "tools/math3d/line_intersection/Cargo.toml"]

[[trigger.http]]
route = "/buffer-polygon"
component = "buffer-polygon"

[component.buffer-polygon]
source = "target/wasm32-wasip1/release/buffer_polygon_tool.wasm"
allowed_outbound_hosts = []
[component.buffer-polygon.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/geospatial/buffer_polygon"
watch = ["tools/geospatial/buffer_polygon/src/**/*.rs", "tools/geospatial/buffer_polygon/Cargo.toml"]

[[trigger.http]]
route = "/proximity-search"
component = "proximity-search"

[component.proximity-search]
source = "target/wasm32-wasip1/release/proximity_search_tool.wasm"
allowed_outbound_hosts = []
[component.proximity-search.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/geospatial/proximity_search"
watch = ["tools/geospatial/proximity_search/src/**/*.rs", "tools/geospatial/proximity_search/Cargo.toml"]

[[trigger.http]]
route = "/proximity-zone"
component = "proximity-zone"

[component.proximity-zone]
source = "target/wasm32-wasip1/release/proximity_zone_tool.wasm"
allowed_outbound_hosts = []
[component.proximity-zone.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/geospatial/proximity_zone"
watch = ["tools/geospatial/proximity_zone/src/**/*.rs", "tools/geospatial/proximity_zone/Cargo.toml"]

[[trigger.http]]
route = "/add"
component = "add"

[component.add]
source = "target/wasm32-wasip1/release/add_tool.wasm"
allowed_outbound_hosts = []
[component.add.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/basic_math/add"
watch = ["tools/basic_math/add/src/**/*.rs", "tools/basic_math/add/Cargo.toml"]

[[trigger.http]]
route = "/multiply"
component = "multiply"

[component.multiply]
source = "target/wasm32-wasip1/release/multiply_tool.wasm"
allowed_outbound_hosts = []
[component.multiply.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/basic_math/multiply"
watch = ["tools/basic_math/multiply/src/**/*.rs", "tools/basic_math/multiply/Cargo.toml"]

[[trigger.http]]
route = "/square"
component = "square"

[component.square]
source = "target/wasm32-wasip1/release/square_tool.wasm"
allowed_outbound_hosts = []
[component.square.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/basic_math/square"
watch = ["tools/basic_math/square/src/**/*.rs", "tools/basic_math/square/Cargo.toml"]

[[trigger.http]]
route = "/sqrt"
component = "sqrt"

[component.sqrt]
source = "target/wasm32-wasip1/release/sqrt_tool.wasm"
allowed_outbound_hosts = []
[component.sqrt.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/basic_math/sqrt"
watch = ["tools/basic_math/sqrt/src/**/*.rs", "tools/basic_math/sqrt/Cargo.toml"]

[[trigger.http]]
route = "/pythagorean"
component = "pythagorean"

[component.pythagorean]
source = "target/wasm32-wasip1/release/pythagorean_tool.wasm"
allowed_outbound_hosts = ["http://square.spin.internal", "http://add.spin.internal", "http://sqrt.spin.internal"]
[component.pythagorean.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/basic_math/pythagorean"
watch = ["tools/basic_math/pythagorean/src/**/*.rs", "tools/basic_math/pythagorean/Cargo.toml"]

[[trigger.http]]
route = "/distance-two-d"
component = "distance-two-d"

[component.distance-two-d]
source = "target/wasm32-wasip1/release/distance_2d_tool.wasm"
allowed_outbound_hosts = ["http://pythagorean.spin.internal"]
[component.distance-two-d.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/basic_math/distance_2d"
watch = ["tools/basic_math/distance_2d/src/**/*.rs", "tools/basic_math/distance_2d/Cargo.toml"]

[[trigger.http]]
route = "/line-plane-intersection"
component = "line-plane-intersection"

[component.line-plane-intersection]
source = "target/wasm32-wasip1/release/line_plane_intersection_tool.wasm"
allowed_outbound_hosts = []
[component.line-plane-intersection.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/line_plane_intersection"
watch = ["tools/math3d/line_plane_intersection/src/**/*.rs", "tools/math3d/line_plane_intersection/Cargo.toml"]

[[trigger.http]]
route = "/plane-plane-intersection"
component = "plane-plane-intersection"

[component.plane-plane-intersection]
source = "target/wasm32-wasip1/release/plane_plane_intersection_tool.wasm"
allowed_outbound_hosts = []
[component.plane-plane-intersection.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/plane_plane_intersection"
watch = ["tools/math3d/plane_plane_intersection/src/**/*.rs", "tools/math3d/plane_plane_intersection/Cargo.toml"]

[[trigger.http]]
route = "/point-plane-distance"
component = "point-plane-distance"

[component.point-plane-distance]
source = "target/wasm32-wasip1/release/point_plane_distance_tool.wasm"
allowed_outbound_hosts = []
[component.point-plane-distance.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/point_plane_distance"
watch = ["tools/math3d/point_plane_distance/src/**/*.rs", "tools/math3d/point_plane_distance/Cargo.toml"]

[[trigger.http]]
route = "/rotation-matrix"
component = "rotation-matrix"

[component.rotation-matrix]
source = "target/wasm32-wasip1/release/rotation_matrix_tool.wasm"
allowed_outbound_hosts = []
[component.rotation-matrix.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/rotation_matrix"
watch = ["tools/math3d/rotation_matrix/src/**/*.rs", "tools/math3d/rotation_matrix/Cargo.toml"]

[[trigger.http]]
route = "/arbitrary-rotation"
component = "arbitrary-rotation"

[component.arbitrary-rotation]
source = "target/wasm32-wasip1/release/arbitrary_rotation_tool.wasm"
allowed_outbound_hosts = []
[component.arbitrary-rotation.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/arbitrary_rotation"
watch = ["tools/math3d/arbitrary_rotation/src/**/*.rs", "tools/math3d/arbitrary_rotation/Cargo.toml"]

[[trigger.http]]
route = "/quaternion-from-axis-angle"
component = "quaternion-from-axis-angle"

[component.quaternion-from-axis-angle]
source = "target/wasm32-wasip1/release/quaternion_from_axis_angle_tool.wasm"
allowed_outbound_hosts = []
[component.quaternion-from-axis-angle.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/quaternion_from_axis_angle"
watch = ["tools/math3d/quaternion_from_axis_angle/src/**/*.rs", "tools/math3d/quaternion_from_axis_angle/Cargo.toml"]

[[trigger.http]]
route = "/quaternion-multiply"
component = "quaternion-multiply"

[component.quaternion-multiply]
source = "target/wasm32-wasip1/release/quaternion_multiply_tool.wasm"
allowed_outbound_hosts = []
[component.quaternion-multiply.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/quaternion_multiply"
watch = ["tools/math3d/quaternion_multiply/src/**/*.rs", "tools/math3d/quaternion_multiply/Cargo.toml"]

[[trigger.http]]
route = "/quaternion-slerp"
component = "quaternion-slerp"

[component.quaternion-slerp]
source = "target/wasm32-wasip1/release/quaternion_slerp_tool.wasm"
allowed_outbound_hosts = []
[component.quaternion-slerp.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/quaternion_slerp"
watch = ["tools/math3d/quaternion_slerp/src/**/*.rs", "tools/math3d/quaternion_slerp/Cargo.toml"]

[[trigger.http]]
route = "/matrix-vector-multiply"
component = "matrix-vector-multiply"

[component.matrix-vector-multiply]
source = "target/wasm32-wasip1/release/matrix_vector_multiply_tool.wasm"
allowed_outbound_hosts = []
[component.matrix-vector-multiply.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/matrix_vector_multiply"
watch = ["tools/math3d/matrix_vector_multiply/src/**/*.rs", "tools/math3d/matrix_vector_multiply/Cargo.toml"]

[[trigger.http]]
route = "/coordinate-conversion-three-d"
component = "coordinate-conversion-three-d"

[component.coordinate-conversion-three-d]
source = "target/wasm32-wasip1/release/math3d_coordinate_conversion_tool.wasm"
allowed_outbound_hosts = []
[component.coordinate-conversion-three-d.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/coordinate_conversion"
watch = ["tools/math3d/coordinate_conversion/src/**/*.rs", "tools/math3d/coordinate_conversion/Cargo.toml"]

[[trigger.http]]
route = "/tetrahedron-volume"
component = "tetrahedron-volume"

[component.tetrahedron-volume]
source = "target/wasm32-wasip1/release/tetrahedron_volume_tool.wasm"
allowed_outbound_hosts = []
[component.tetrahedron-volume.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/tetrahedron_volume"
watch = ["tools/math3d/tetrahedron_volume/src/**/*.rs", "tools/math3d/tetrahedron_volume/Cargo.toml"]

[[trigger.http]]
route = "/sphere-volume"
component = "sphere-volume"

[component.sphere-volume]
source = "target/wasm32-wasip1/release/sphere_volume_tool.wasm"
allowed_outbound_hosts = []
[component.sphere-volume.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/sphere_volume"
watch = ["tools/math3d/sphere_volume/src/**/*.rs", "tools/math3d/sphere_volume/Cargo.toml"]

[[trigger.http]]
route = "/cylinder-volume"
component = "cylinder-volume"

[component.cylinder-volume]
source = "target/wasm32-wasip1/release/cylinder_volume_tool.wasm"
allowed_outbound_hosts = []
[component.cylinder-volume.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/cylinder_volume"
watch = ["tools/math3d/cylinder_volume/src/**/*.rs", "tools/math3d/cylinder_volume/Cargo.toml"]

[[trigger.http]]
route = "/aabb-volume"
component = "aabb-volume"

[component.aabb-volume]
source = "target/wasm32-wasip1/release/aabb_volume_tool.wasm"
allowed_outbound_hosts = []
[component.aabb-volume.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/aabb_volume"
watch = ["tools/math3d/aabb_volume/src/**/*.rs", "tools/math3d/aabb_volume/Cargo.toml"]

[[trigger.http]]
route = "/pyramid-volume"
component = "pyramid-volume"

[component.pyramid-volume]
source = "target/wasm32-wasip1/release/pyramid_volume_tool.wasm"
allowed_outbound_hosts = []
[component.pyramid-volume.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/pyramid_volume"
watch = ["tools/math3d/pyramid_volume/src/**/*.rs", "tools/math3d/pyramid_volume/Cargo.toml"]

[[trigger.http]]
route = "/sphere-ray-intersection"
component = "sphere-ray-intersection"

[component.sphere-ray-intersection]
source = "target/wasm32-wasip1/release/sphere_ray_intersection_tool.wasm"
allowed_outbound_hosts = []
[component.sphere-ray-intersection.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/sphere_ray_intersection"
watch = ["tools/math3d/sphere_ray_intersection/src/**/*.rs", "tools/math3d/sphere_ray_intersection/Cargo.toml"]

[[trigger.http]]
route = "/sphere-sphere-intersection"
component = "sphere-sphere-intersection"

[component.sphere-sphere-intersection]
source = "target/wasm32-wasip1/release/sphere_sphere_intersection_tool.wasm"
allowed_outbound_hosts = []
[component.sphere-sphere-intersection.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/sphere_sphere_intersection"
watch = ["tools/math3d/sphere_sphere_intersection/src/**/*.rs", "tools/math3d/sphere_sphere_intersection/Cargo.toml"]

[[trigger.http]]
route = "/cylinder-ray-intersection"
component = "cylinder-ray-intersection"

[component.cylinder-ray-intersection]
source = "target/wasm32-wasip1/release/cylinder_ray_intersection_tool.wasm"
allowed_outbound_hosts = []
[component.cylinder-ray-intersection.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/cylinder_ray_intersection"
watch = ["tools/math3d/cylinder_ray_intersection/src/**/*.rs", "tools/math3d/cylinder_ray_intersection/Cargo.toml"]

[[trigger.http]]
route = "/ray-aabb-intersection"
component = "ray-aabb-intersection"

[component.ray-aabb-intersection]
source = "target/wasm32-wasip1/release/ray_aabb_intersection_tool.wasm"
allowed_outbound_hosts = []
[component.ray-aabb-intersection.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/ray_aabb_intersection"
watch = ["tools/math3d/ray_aabb_intersection/src/**/*.rs", "tools/math3d/ray_aabb_intersection/Cargo.toml"]

[[trigger.http]]
route = "/point-line-distance"
component = "point-line-distance"

[component.point-line-distance]
source = "target/wasm32-wasip1/release/point_line_distance_tool.wasm"
allowed_outbound_hosts = []
[component.point-line-distance.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/point_line_distance"
watch = ["tools/math3d/point_line_distance/src/**/*.rs", "tools/math3d/point_line_distance/Cargo.toml"]

[[trigger.http]]
route = "/descriptive-statistics"
component = "descriptive-statistics"

[component.descriptive-statistics]
source = "target/wasm32-wasip1/release/descriptive_statistics_tool.wasm"
allowed_outbound_hosts = []
[component.descriptive-statistics.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/statistics/descriptive_statistics"
watch = ["tools/statistics/descriptive_statistics/src/**/*.rs", "tools/statistics/descriptive_statistics/Cargo.toml"]

[[trigger.http]]
route = "/summary-statistics"
component = "summary-statistics"

[component.summary-statistics]
source = "target/wasm32-wasip1/release/summary_statistics.wasm"
allowed_outbound_hosts = []
[component.summary-statistics.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/statistics/summary_statistics"
watch = ["tools/statistics/summary_statistics/src/**/*.rs", "tools/statistics/summary_statistics/Cargo.toml"]

[[trigger.http]]
route = "/pearson-correlation"
component = "pearson-correlation"

[component.pearson-correlation]
source = "target/wasm32-wasip1/release/pearson_correlation.wasm"
allowed_outbound_hosts = []
[component.pearson-correlation.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/statistics/pearson_correlation"
watch = ["tools/statistics/pearson_correlation/src/**/*.rs", "tools/statistics/pearson_correlation/Cargo.toml"]

[[trigger.http]]
route = "/spearman-correlation"
component = "spearman-correlation"

[component.spearman-correlation]
source = "target/wasm32-wasip1/release/spearman_correlation.wasm"
allowed_outbound_hosts = []
[component.spearman-correlation.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/statistics/spearman_correlation"
watch = ["tools/statistics/spearman_correlation/src/**/*.rs", "tools/statistics/spearman_correlation/Cargo.toml"]

[[trigger.http]]
route = "/correlation-matrix"
component = "correlation-matrix"

[component.correlation-matrix]
source = "target/wasm32-wasip1/release/correlation_matrix.wasm"
allowed_outbound_hosts = []
[component.correlation-matrix.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/statistics/correlation_matrix"
watch = ["tools/statistics/correlation_matrix/src/**/*.rs", "tools/statistics/correlation_matrix/Cargo.toml"]

[[trigger.http]]
route = "/linear-regression"
component = "linear-regression"

[component.linear-regression]
source = "target/wasm32-wasip1/release/linear_regression.wasm"
allowed_outbound_hosts = []
[component.linear-regression.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/statistics/linear_regression"
watch = ["tools/statistics/linear_regression/src/**/*.rs", "tools/statistics/linear_regression/Cargo.toml"]
[[trigger.http]]
route = "/histogram"
component = "histogram"
[component.histogram]
source = "target/wasm32-wasip1/release/histogram.wasm"
allowed_outbound_hosts = []
[component.histogram.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/statistics/histogram"
watch = ["tools/statistics/histogram/src/**/*.rs", "tools/statistics/histogram/Cargo.toml"]

[[trigger.http]]
route = "/predict-values"
component = "predict-values"

[component.predict-values]
source = "target/wasm32-wasip1/release/predict_values.wasm"
allowed_outbound_hosts = []
[component.predict-values.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/statistics/predict_values"
watch = ["tools/statistics/predict_values/src/**/*.rs", "tools/statistics/predict_values/Cargo.toml"]

[[trigger.http]]
route = "/polynomial-regression"
component = "polynomial-regression"

[component.polynomial-regression]
source = "target/wasm32-wasip1/release/polynomial_regression.wasm"
allowed_outbound_hosts = []
[component.polynomial-regression.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/statistics/polynomial_regression"
watch = ["tools/statistics/polynomial_regression/src/**/*.rs", "tools/statistics/polynomial_regression/Cargo.toml"]

[[trigger.http]]
route = "/test-normality"
component = "test-normality"

[component.test-normality]
source = "target/wasm32-wasip1/release/test_normality.wasm"
allowed_outbound_hosts = []
[component.test-normality.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/statistics/test_normality"
watch = ["tools/statistics/test_normality/src/**/*.rs", "tools/statistics/test_normality/Cargo.toml"]

[[trigger.http]]
route = "/analyze-distribution"
component = "analyze-distribution"

[component.analyze-distribution]
source = "target/wasm32-wasip1/release/analyze_distribution.wasm"
allowed_outbound_hosts = ["http://histogram.spin.internal", "http://test-normality.spin.internal"]
[component.analyze-distribution.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/statistics/analyze_distribution"
watch = ["tools/statistics/analyze_distribution/src/**/*.rs", "tools/statistics/analyze_distribution/Cargo.toml"]

[[trigger.http]]
route = "/polygon-simplification"
component = "polygon-simplification"

[component.polygon-simplification]
source = "target/wasm32-wasip1/release/polygon_simplification_tool.wasm"
allowed_outbound_hosts = []
[component.polygon-simplification.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/geospatial/polygon_simplification"
watch = ["tools/geospatial/polygon_simplification/src/**/*.rs", "tools/geospatial/polygon_simplification/Cargo.toml"]

[[trigger.http]]
route = "/vector-angle"
component = "vector-angle"

[component.vector-angle]
source = "target/wasm32-wasip1/release/vector_angle_tool.wasm"
allowed_outbound_hosts = []
[component.vector-angle.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/vector_angle"
watch = ["tools/math3d/vector_angle/src/**/*.rs", "tools/math3d/vector_angle/Cargo.toml"]

[[trigger.http]]
route = "/line-segment-intersection"
component = "line-segment-intersection"

[component.line-segment-intersection]
source = "target/wasm32-wasip1/release/line_segment_intersection_tool.wasm"
allowed_outbound_hosts = []
[component.line-segment-intersection.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/line_segment_intersection"
watch = ["tools/math3d/line_segment_intersection/src/**/*.rs", "tools/math3d/line_segment_intersection/Cargo.toml"]

[[trigger.http]]
route = "/multiple-line-intersection"
component = "multiple-line-intersection"

[component.multiple-line-intersection]
source = "target/wasm32-wasip1/release/multiple_line_intersection_tool.wasm"
allowed_outbound_hosts = []
[component.multiple-line-intersection.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/multiple_line_intersection"
watch = ["tools/math3d/multiple_line_intersection/src/**/*.rs", "tools/math3d/multiple_line_intersection/Cargo.toml"]

[[trigger.http]]
route = "/subtract"
component = "subtract"

[component.subtract]
source = "target/wasm32-wasip1/release/subtract_tool.wasm"
allowed_outbound_hosts = []
[component.subtract.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/basic_math/subtract"
watch = ["tools/basic_math/subtract/src/**/*.rs", "tools/basic_math/subtract/Cargo.toml"]

[[trigger.http]]
route = "/divide"
component = "divide"

[component.divide]
source = "target/wasm32-wasip1/release/divide_tool.wasm"
allowed_outbound_hosts = []
[component.divide.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/basic_math/divide"
watch = ["tools/basic_math/divide/src/**/*.rs", "tools/basic_math/divide/Cargo.toml"]

[[trigger.http]]
route = "/remainder"
component = "remainder"

[component.remainder]
source = "target/wasm32-wasip1/release/remainder_tool.wasm"
allowed_outbound_hosts = []
[component.remainder.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/basic_math/remainder"
watch = ["tools/basic_math/remainder/src/**/*.rs", "tools/basic_math/remainder/Cargo.toml"]

[[trigger.http]]
route = "/modulus"
component = "modulus"

[component.modulus]
source = "target/wasm32-wasip1/release/modulus_tool.wasm"
allowed_outbound_hosts = []
[component.modulus.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/basic_math/modulus"
watch = ["tools/basic_math/modulus/src/**/*.rs", "tools/basic_math/modulus/Cargo.toml"]

[[trigger.http]]
route = "/power"
component = "power"

[component.power]
source = "target/wasm32-wasip1/release/power_tool.wasm"
allowed_outbound_hosts = []
[component.power.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/basic_math/power"
watch = ["tools/basic_math/power/src/**/*.rs", "tools/basic_math/power/Cargo.toml"]

[[trigger.http]]
route = "/uuid-generator"
component = "uuid-generator"

[component.uuid-generator]
source = "target/wasm32-wasip1/release/uuid_generator_tool.wasm"
allowed_outbound_hosts = []
[component.uuid-generator.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/identifiers/uuid_generator"
watch = ["tools/identifiers/uuid_generator/src/**/*.rs", "tools/identifiers/uuid_generator/Cargo.toml"]

[[trigger.http]]
route = "/current-datetime"
component = "current-datetime"

[component.current-datetime]
source = "target/wasm32-wasip1/release/current_datetime_tool.wasm"
allowed_outbound_hosts = []
[component.current-datetime.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/datetime/current_datetime"
watch = ["tools/datetime/current_datetime/src/**/*.rs", "tools/datetime/current_datetime/Cargo.toml"]

[[trigger.http]]
route = "/base64-encoder"
component = "base64-encoder"

[component.base64-encoder]
source = "target/wasm32-wasip1/release/base64_encoder_tool.wasm"
allowed_outbound_hosts = []
[component.base64-encoder.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/encoding/base64_encoder"
watch = ["tools/encoding/base64_encoder/src/**/*.rs", "tools/encoding/base64_encoder/Cargo.toml"]

[[trigger.http]]
route = "/base64-decoder"
component = "base64-decoder"

[component.base64-decoder]
source = "target/wasm32-wasip1/release/base64_decoder_tool.wasm"
allowed_outbound_hosts = []
[component.base64-decoder.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/encoding/base64_decoder"
watch = ["tools/encoding/base64_decoder/src/**/*.rs", "tools/encoding/base64_decoder/Cargo.toml"]

[[trigger.http]]
route = "/random-integer"
component = "random-integer"

[component.random-integer]
source = "target/wasm32-wasip1/release/random_integer_tool.wasm"
allowed_outbound_hosts = []
[component.random-integer.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/identifiers/random_integer"
watch = ["tools/identifiers/random_integer/src/**/*.rs", "tools/identifiers/random_integer/Cargo.toml"]

[[trigger.http]]
route = "/random-string"
component = "random-string"

[component.random-string]
source = "target/wasm32-wasip1/release/random_string_tool.wasm"
allowed_outbound_hosts = []
[component.random-string.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/identifiers/random_string"
watch = ["tools/identifiers/random_string/src/**/*.rs", "tools/identifiers/random_string/Cargo.toml"]

[[trigger.http]]
route = "/url-encoder"
component = "url-encoder"

[component.url-encoder]
source = "target/wasm32-wasip1/release/url_encoder_tool.wasm"
allowed_outbound_hosts = []
[component.url-encoder.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/encoding/url_encoder"
watch = ["tools/encoding/url_encoder/src/**/*.rs", "tools/encoding/url_encoder/Cargo.toml"]

[[trigger.http]]
route = "/url-decoder"
component = "url-decoder"

[component.url-decoder]
source = "target/wasm32-wasip1/release/url_decoder_tool.wasm"
allowed_outbound_hosts = []
[component.url-decoder.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/encoding/url_decoder"
watch = ["tools/encoding/url_decoder/src/**/*.rs", "tools/encoding/url_decoder/Cargo.toml"]

[[trigger.http]]
route = "/hex-encoder"
component = "hex-encoder"

[component.hex-encoder]
source = "target/wasm32-wasip1/release/hex_encoder_tool.wasm"
allowed_outbound_hosts = []
[component.hex-encoder.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/encoding/hex_encoder"
watch = ["tools/encoding/hex_encoder/src/**/*.rs", "tools/encoding/hex_encoder/Cargo.toml"]

[[trigger.http]]
route = "/hex-decoder"
component = "hex-decoder"

[component.hex-decoder]
source = "target/wasm32-wasip1/release/hex_decoder_tool.wasm"
allowed_outbound_hosts = []
[component.hex-decoder.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/encoding/hex_decoder"
watch = ["tools/encoding/hex_decoder/src/**/*.rs", "tools/encoding/hex_decoder/Cargo.toml"]

[[trigger.http]]
route = "/string-case-converter"
component = "string-case-converter"

[component.string-case-converter]
source = "target/wasm32-wasip1/release/string_case_converter_tool.wasm"
allowed_outbound_hosts = []
[component.string-case-converter.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/string/string_case_converter"
watch = ["tools/string/string_case_converter/src/**/*.rs", "tools/string/string_case_converter/Cargo.toml"]

[[trigger.http]]
route = "/string-trimmer"
component = "string-trimmer"

[component.string-trimmer]
source = "target/wasm32-wasip1/release/string_trimmer_tool.wasm"
allowed_outbound_hosts = []
[component.string-trimmer.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/string/string_trimmer"
watch = ["tools/string/string_trimmer/src/**/*.rs", "tools/string/string_trimmer/Cargo.toml"]

[[trigger.http]]
route = "/string-splitter"
component = "string-splitter"

[component.string-splitter]
source = "target/wasm32-wasip1/release/string_splitter_tool.wasm"
allowed_outbound_hosts = []
[component.string-splitter.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/string/string_splitter"
watch = ["tools/string/string_splitter/src/**/*.rs", "tools/string/string_splitter/Cargo.toml"]

[[trigger.http]]
route = "/json-formatter"
component = "json-formatter"

[component.json-formatter]
source = "target/wasm32-wasip1/release/json_formatter_tool.wasm"
allowed_outbound_hosts = []
[component.json-formatter.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/data_formats/json_formatter"
watch = ["tools/data_formats/json_formatter/src/**/*.rs", "tools/data_formats/json_formatter/Cargo.toml"]

[[trigger.http]]
route = "/json-validator"
component = "json-validator"

[component.json-validator]
source = "target/wasm32-wasip1/release/json_validator_tool.wasm"
allowed_outbound_hosts = []
[component.json-validator.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/data_formats/json_validator"
watch = ["tools/data_formats/json_validator/src/**/*.rs", "tools/data_formats/json_validator/Cargo.toml"]

[[trigger.http]]
route = "/email-validator"
component = "email-validator"

[component.email-validator]
source = "target/wasm32-wasip1/release/email_validator_tool.wasm"
allowed_outbound_hosts = []
[component.email-validator.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/validation/email_validator"
watch = ["tools/validation/email_validator/src/**/*.rs", "tools/validation/email_validator/Cargo.toml"]

[[trigger.http]]
route = "/hash-generator"
component = "hash-generator"

[component.hash-generator]
source = "target/wasm32-wasip1/release/hash_generator_tool.wasm"
allowed_outbound_hosts = []
[component.hash-generator.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/crypto/hash_generator"
watch = ["tools/crypto/hash_generator/src/**/*.rs", "tools/crypto/hash_generator/Cargo.toml"]

[[trigger.http]]
route = "/url-validator"
component = "url-validator"

[component.url-validator]
source = "target/wasm32-wasip1/release/url_validator_tool.wasm"
allowed_outbound_hosts = []
[component.url-validator.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/validation/url_validator"
watch = ["tools/validation/url_validator/src/**/*.rs", "tools/validation/url_validator/Cargo.toml"]

[[trigger.http]]
route = "/regex-matcher"
component = "regex-matcher"

[component.regex-matcher]
source = "target/wasm32-wasip1/release/regex_matcher_tool.wasm"
allowed_outbound_hosts = []
[component.regex-matcher.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/validation/regex_matcher"
watch = ["tools/validation/regex_matcher/src/**/*.rs", "tools/validation/regex_matcher/Cargo.toml"]

[[trigger.http]]
route = "/csv-parser"
component = "csv-parser"

[component.csv-parser]
source = "target/wasm32-wasip1/release/csv_parser_tool.wasm"
allowed_outbound_hosts = []
[component.csv-parser.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/data_formats/csv_parser"
watch = ["tools/data_formats/csv_parser/src/**/*.rs", "tools/data_formats/csv_parser/Cargo.toml"]

[[trigger.http]]
route = "/yaml-formatter"
component = "yaml-formatter"

[component.yaml-formatter]
source = "target/wasm32-wasip1/release/yaml_formatter_tool.wasm"
allowed_outbound_hosts = []
[component.yaml-formatter.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/data_formats/yaml_formatter"
watch = ["tools/data_formats/yaml_formatter/src/**/*.rs", "tools/data_formats/yaml_formatter/Cargo.toml"]


