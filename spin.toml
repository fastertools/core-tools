spin_manifest_version = 2

[application]
name = "coretools"
version = "0.1.0"
authors = ["Corey Ryan <corey@coreyr.com>"]
description = "Core computational tools MCP server"

[variables]
# List all tool components that should be discovered by the gateway
# Each component hosts exactly one tool due to WASM constraints
tool_components = { default = "distance,bearing,dot-product,polygon-area,point-in-polygon,coordinate-conversion,cross-product,vector-magnitude,line-intersection,buffer-polygon,proximity-search,proximity-zone,add,multiply,square,sqrt,pythagorean,distance-two-d,line-plane-intersection,plane-plane-intersection,point-plane-distance,rotation-matrix,arbitrary-rotation,quaternion-from-axis-angle,quaternion-multiply,quaternion-slerp,matrix-vector-multiply,coordinate-conversion-three-d,tetrahedron-volume,sphere-volume,cylinder-volume,aabb-volume,pyramid-volume,sphere-ray-intersection,sphere-sphere-intersection,cylinder-ray-intersection,ray-aabb-intersection,point-line-distance,descriptive-statistics" }

[[trigger.http]]
route = "/mcp"
component = "ftl-mcp-gateway"

[component.ftl-mcp-gateway]
source = { registry = "ghcr.io", package = "fastertools:ftl-mcp-gateway", version = "0.0.3" }
allowed_outbound_hosts = ["http://*.spin.internal"]
[component.ftl-mcp-gateway.variables]
tool_components = "{{ tool_components }}"
validate_arguments = "true"

[[trigger.http]]
route = "/distance"
component = "distance"

[component.distance]
source = "tools/geospatial/distance/target/wasm32-wasip1/release/distance_tool.wasm"
allowed_outbound_hosts = []
[component.distance.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/geospatial/distance"
watch = ["tools/geospatial/distance/src/**/*.rs", "tools/geospatial/distance/Cargo.toml"]

[[trigger.http]]
route = "/bearing"
component = "bearing"

[component.bearing]
source = "tools/geospatial/bearing/target/wasm32-wasip1/release/bearing_tool.wasm"
allowed_outbound_hosts = []
[component.bearing.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/geospatial/bearing"
watch = ["tools/geospatial/bearing/src/**/*.rs", "tools/geospatial/bearing/Cargo.toml"]

[[trigger.http]]
route = "/dot-product"
component = "dot-product"

[component.dot-product]
source = "tools/math3d/dot_product/target/wasm32-wasip1/release/dot_product_tool.wasm"
allowed_outbound_hosts = []
[component.dot-product.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/dot_product"
watch = ["tools/math3d/dot_product/src/**/*.rs", "tools/math3d/dot_product/Cargo.toml"]

[[trigger.http]]
route = "/polygon-area"
component = "polygon-area"

[component.polygon-area]
source = "tools/geospatial/polygon_area/target/wasm32-wasip1/release/polygon_area_tool.wasm"
allowed_outbound_hosts = []
[component.polygon-area.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/geospatial/polygon_area"
watch = ["tools/geospatial/polygon_area/src/**/*.rs", "tools/geospatial/polygon_area/Cargo.toml"]

[[trigger.http]]
route = "/point-in-polygon"
component = "point-in-polygon"

[component.point-in-polygon]
source = "tools/geospatial/point_in_polygon/target/wasm32-wasip1/release/point_in_polygon_tool.wasm"
allowed_outbound_hosts = []
[component.point-in-polygon.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/geospatial/point_in_polygon"
watch = ["tools/geospatial/point_in_polygon/src/**/*.rs", "tools/geospatial/point_in_polygon/Cargo.toml"]

[[trigger.http]]
route = "/coordinate-conversion"
component = "coordinate-conversion"

[component.coordinate-conversion]
source = "tools/geospatial/coordinate_conversion/target/wasm32-wasip1/release/coordinate_conversion_tool.wasm"
allowed_outbound_hosts = []
[component.coordinate-conversion.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/geospatial/coordinate_conversion"
watch = ["tools/geospatial/coordinate_conversion/src/**/*.rs", "tools/geospatial/coordinate_conversion/Cargo.toml"]

[[trigger.http]]
route = "/cross-product"
component = "cross-product"

[component.cross-product]
source = "tools/math3d/cross_product/target/wasm32-wasip1/release/cross_product_tool.wasm"
allowed_outbound_hosts = []
[component.cross-product.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/cross_product"
watch = ["tools/math3d/cross_product/src/**/*.rs", "tools/math3d/cross_product/Cargo.toml"]

[[trigger.http]]
route = "/vector-magnitude"
component = "vector-magnitude"

[component.vector-magnitude]
source = "tools/math3d/vector_magnitude/target/wasm32-wasip1/release/vector_magnitude_tool.wasm"
allowed_outbound_hosts = []
[component.vector-magnitude.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/vector_magnitude"
watch = ["tools/math3d/vector_magnitude/src/**/*.rs", "tools/math3d/vector_magnitude/Cargo.toml"]

[[trigger.http]]
route = "/line-intersection"
component = "line-intersection"

[component.line-intersection]
source = "tools/math3d/line_intersection/target/wasm32-wasip1/release/line_intersection_tool.wasm"
allowed_outbound_hosts = []
[component.line-intersection.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/line_intersection"
watch = ["tools/math3d/line_intersection/src/**/*.rs", "tools/math3d/line_intersection/Cargo.toml"]

[[trigger.http]]
route = "/buffer-polygon"
component = "buffer-polygon"

[component.buffer-polygon]
source = "tools/geospatial/buffer_polygon/target/wasm32-wasip1/release/buffer_polygon_tool.wasm"
allowed_outbound_hosts = []
[component.buffer-polygon.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/geospatial/buffer_polygon"
watch = ["tools/geospatial/buffer_polygon/src/**/*.rs", "tools/geospatial/buffer_polygon/Cargo.toml"]

[[trigger.http]]
route = "/proximity-search"
component = "proximity-search"

[component.proximity-search]
source = "tools/geospatial/proximity_search/target/wasm32-wasip1/release/proximity_search_tool.wasm"
allowed_outbound_hosts = []
[component.proximity-search.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/geospatial/proximity_search"
watch = ["tools/geospatial/proximity_search/src/**/*.rs", "tools/geospatial/proximity_search/Cargo.toml"]

[[trigger.http]]
route = "/proximity-zone"
component = "proximity-zone"

[component.proximity-zone]
source = "tools/geospatial/proximity_zone/target/wasm32-wasip1/release/proximity_zone_tool.wasm"
allowed_outbound_hosts = []
[component.proximity-zone.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/geospatial/proximity_zone"
watch = ["tools/geospatial/proximity_zone/src/**/*.rs", "tools/geospatial/proximity_zone/Cargo.toml"]

[[trigger.http]]
route = "/add"
component = "add"

[component.add]
source = "tools/basic_math/add/target/wasm32-wasip1/release/add_tool.wasm"
allowed_outbound_hosts = []
[component.add.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/basic_math/add"
watch = ["tools/basic_math/add/src/**/*.rs", "tools/basic_math/add/Cargo.toml"]

[[trigger.http]]
route = "/multiply"
component = "multiply"

[component.multiply]
source = "tools/basic_math/multiply/target/wasm32-wasip1/release/multiply_tool.wasm"
allowed_outbound_hosts = []
[component.multiply.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/basic_math/multiply"
watch = ["tools/basic_math/multiply/src/**/*.rs", "tools/basic_math/multiply/Cargo.toml"]

[[trigger.http]]
route = "/square"
component = "square"

[component.square]
source = "tools/basic_math/square/target/wasm32-wasip1/release/square_tool.wasm"
allowed_outbound_hosts = []
[component.square.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/basic_math/square"
watch = ["tools/basic_math/square/src/**/*.rs", "tools/basic_math/square/Cargo.toml"]

[[trigger.http]]
route = "/sqrt"
component = "sqrt"

[component.sqrt]
source = "tools/basic_math/sqrt/target/wasm32-wasip1/release/sqrt_tool.wasm"
allowed_outbound_hosts = []
[component.sqrt.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/basic_math/sqrt"
watch = ["tools/basic_math/sqrt/src/**/*.rs", "tools/basic_math/sqrt/Cargo.toml"]

[[trigger.http]]
route = "/pythagorean"
component = "pythagorean"

[component.pythagorean]
source = "tools/basic_math/pythagorean/target/wasm32-wasip1/release/pythagorean_tool.wasm"
allowed_outbound_hosts = ["http://square.spin.internal", "http://add.spin.internal", "http://sqrt.spin.internal"]
[component.pythagorean.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/basic_math/pythagorean"
watch = ["tools/basic_math/pythagorean/src/**/*.rs", "tools/basic_math/pythagorean/Cargo.toml"]

[[trigger.http]]
route = "/distance-two-d"
component = "distance-two-d"

[component.distance-two-d]
source = "tools/basic_math/distance_2d/target/wasm32-wasip1/release/distance_2d_tool.wasm"
allowed_outbound_hosts = ["http://pythagorean.spin.internal"]
[component.distance-two-d.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/basic_math/distance_2d"
watch = ["tools/basic_math/distance_2d/src/**/*.rs", "tools/basic_math/distance_2d/Cargo.toml"]

[[trigger.http]]
route = "/line-plane-intersection"
component = "line-plane-intersection"

[component.line-plane-intersection]
source = "tools/math3d/line_plane_intersection/target/wasm32-wasip1/release/line_plane_intersection_tool.wasm"
allowed_outbound_hosts = []
[component.line-plane-intersection.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/line_plane_intersection"
watch = ["tools/math3d/line_plane_intersection/src/**/*.rs", "tools/math3d/line_plane_intersection/Cargo.toml"]

[[trigger.http]]
route = "/plane-plane-intersection"
component = "plane-plane-intersection"

[component.plane-plane-intersection]
source = "tools/math3d/plane_plane_intersection/target/wasm32-wasip1/release/plane_plane_intersection_tool.wasm"
allowed_outbound_hosts = []
[component.plane-plane-intersection.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/plane_plane_intersection"
watch = ["tools/math3d/plane_plane_intersection/src/**/*.rs", "tools/math3d/plane_plane_intersection/Cargo.toml"]

[[trigger.http]]
route = "/point-plane-distance"
component = "point-plane-distance"

[component.point-plane-distance]
source = "tools/math3d/point_plane_distance/target/wasm32-wasip1/release/point_plane_distance_tool.wasm"
allowed_outbound_hosts = []
[component.point-plane-distance.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/point_plane_distance"
watch = ["tools/math3d/point_plane_distance/src/**/*.rs", "tools/math3d/point_plane_distance/Cargo.toml"]

[[trigger.http]]
route = "/rotation-matrix"
component = "rotation-matrix"

[component.rotation-matrix]
source = "tools/math3d/rotation_matrix/target/wasm32-wasip1/release/rotation_matrix_tool.wasm"
allowed_outbound_hosts = []
[component.rotation-matrix.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/rotation_matrix"
watch = ["tools/math3d/rotation_matrix/src/**/*.rs", "tools/math3d/rotation_matrix/Cargo.toml"]

[[trigger.http]]
route = "/arbitrary-rotation"
component = "arbitrary-rotation"

[component.arbitrary-rotation]
source = "tools/math3d/arbitrary_rotation/target/wasm32-wasip1/release/arbitrary_rotation_tool.wasm"
allowed_outbound_hosts = []
[component.arbitrary-rotation.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/arbitrary_rotation"
watch = ["tools/math3d/arbitrary_rotation/src/**/*.rs", "tools/math3d/arbitrary_rotation/Cargo.toml"]

[[trigger.http]]
route = "/quaternion-from-axis-angle"
component = "quaternion-from-axis-angle"

[component.quaternion-from-axis-angle]
source = "tools/math3d/quaternion_from_axis_angle/target/wasm32-wasip1/release/quaternion_from_axis_angle_tool.wasm"
allowed_outbound_hosts = []
[component.quaternion-from-axis-angle.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/quaternion_from_axis_angle"
watch = ["tools/math3d/quaternion_from_axis_angle/src/**/*.rs", "tools/math3d/quaternion_from_axis_angle/Cargo.toml"]

[[trigger.http]]
route = "/quaternion-multiply"
component = "quaternion-multiply"

[component.quaternion-multiply]
source = "tools/math3d/quaternion_multiply/target/wasm32-wasip1/release/quaternion_multiply_tool.wasm"
allowed_outbound_hosts = []
[component.quaternion-multiply.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/quaternion_multiply"
watch = ["tools/math3d/quaternion_multiply/src/**/*.rs", "tools/math3d/quaternion_multiply/Cargo.toml"]

[[trigger.http]]
route = "/quaternion-slerp"
component = "quaternion-slerp"

[component.quaternion-slerp]
source = "tools/math3d/quaternion_slerp/target/wasm32-wasip1/release/quaternion_slerp_tool.wasm"
allowed_outbound_hosts = []
[component.quaternion-slerp.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/quaternion_slerp"
watch = ["tools/math3d/quaternion_slerp/src/**/*.rs", "tools/math3d/quaternion_slerp/Cargo.toml"]

[[trigger.http]]
route = "/matrix-vector-multiply"
component = "matrix-vector-multiply"

[component.matrix-vector-multiply]
source = "tools/math3d/matrix_vector_multiply/target/wasm32-wasip1/release/matrix_vector_multiply_tool.wasm"
allowed_outbound_hosts = []
[component.matrix-vector-multiply.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/matrix_vector_multiply"
watch = ["tools/math3d/matrix_vector_multiply/src/**/*.rs", "tools/math3d/matrix_vector_multiply/Cargo.toml"]

[[trigger.http]]
route = "/coordinate-conversion-three-d"
component = "coordinate-conversion-three-d"

[component.coordinate-conversion-three-d]
source = "tools/math3d/coordinate_conversion/target/wasm32-wasip1/release/coordinate_conversion_tool.wasm"
allowed_outbound_hosts = []
[component.coordinate-conversion-three-d.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/coordinate_conversion"
watch = ["tools/math3d/coordinate_conversion/src/**/*.rs", "tools/math3d/coordinate_conversion/Cargo.toml"]

[[trigger.http]]
route = "/tetrahedron-volume"
component = "tetrahedron-volume"

[component.tetrahedron-volume]
source = "tools/math3d/tetrahedron_volume/target/wasm32-wasip1/release/tetrahedron_volume_tool.wasm"
allowed_outbound_hosts = []
[component.tetrahedron-volume.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/tetrahedron_volume"
watch = ["tools/math3d/tetrahedron_volume/src/**/*.rs", "tools/math3d/tetrahedron_volume/Cargo.toml"]

[[trigger.http]]
route = "/sphere-volume"
component = "sphere-volume"

[component.sphere-volume]
source = "tools/math3d/sphere_volume/target/wasm32-wasip1/release/sphere_volume_tool.wasm"
allowed_outbound_hosts = []
[component.sphere-volume.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/sphere_volume"
watch = ["tools/math3d/sphere_volume/src/**/*.rs", "tools/math3d/sphere_volume/Cargo.toml"]

[[trigger.http]]
route = "/cylinder-volume"
component = "cylinder-volume"

[component.cylinder-volume]
source = "tools/math3d/cylinder_volume/target/wasm32-wasip1/release/cylinder_volume_tool.wasm"
allowed_outbound_hosts = []
[component.cylinder-volume.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/cylinder_volume"
watch = ["tools/math3d/cylinder_volume/src/**/*.rs", "tools/math3d/cylinder_volume/Cargo.toml"]

[[trigger.http]]
route = "/aabb-volume"
component = "aabb-volume"

[component.aabb-volume]
source = "tools/math3d/aabb_volume/target/wasm32-wasip1/release/aabb_volume_tool.wasm"
allowed_outbound_hosts = []
[component.aabb-volume.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/aabb_volume"
watch = ["tools/math3d/aabb_volume/src/**/*.rs", "tools/math3d/aabb_volume/Cargo.toml"]

[[trigger.http]]
route = "/pyramid-volume"
component = "pyramid-volume"

[component.pyramid-volume]
source = "tools/math3d/pyramid_volume/target/wasm32-wasip1/release/pyramid_volume_tool.wasm"
allowed_outbound_hosts = []
[component.pyramid-volume.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/pyramid_volume"
watch = ["tools/math3d/pyramid_volume/src/**/*.rs", "tools/math3d/pyramid_volume/Cargo.toml"]

[[trigger.http]]
route = "/sphere-ray-intersection"
component = "sphere-ray-intersection"

[component.sphere-ray-intersection]
source = "tools/math3d/sphere_ray_intersection/target/wasm32-wasip1/release/sphere_ray_intersection_tool.wasm"
allowed_outbound_hosts = []
[component.sphere-ray-intersection.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/sphere_ray_intersection"
watch = ["tools/math3d/sphere_ray_intersection/src/**/*.rs", "tools/math3d/sphere_ray_intersection/Cargo.toml"]

[[trigger.http]]
route = "/sphere-sphere-intersection"
component = "sphere-sphere-intersection"

[component.sphere-sphere-intersection]
source = "tools/math3d/sphere_sphere_intersection/target/wasm32-wasip1/release/sphere_sphere_intersection_tool.wasm"
allowed_outbound_hosts = []
[component.sphere-sphere-intersection.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/sphere_sphere_intersection"
watch = ["tools/math3d/sphere_sphere_intersection/src/**/*.rs", "tools/math3d/sphere_sphere_intersection/Cargo.toml"]

[[trigger.http]]
route = "/cylinder-ray-intersection"
component = "cylinder-ray-intersection"

[component.cylinder-ray-intersection]
source = "tools/math3d/cylinder_ray_intersection/target/wasm32-wasip1/release/cylinder_ray_intersection_tool.wasm"
allowed_outbound_hosts = []
[component.cylinder-ray-intersection.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/cylinder_ray_intersection"
watch = ["tools/math3d/cylinder_ray_intersection/src/**/*.rs", "tools/math3d/cylinder_ray_intersection/Cargo.toml"]

[[trigger.http]]
route = "/ray-aabb-intersection"
component = "ray-aabb-intersection"

[component.ray-aabb-intersection]
source = "tools/math3d/ray_aabb_intersection/target/wasm32-wasip1/release/ray_aabb_intersection_tool.wasm"
allowed_outbound_hosts = []
[component.ray-aabb-intersection.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/ray_aabb_intersection"
watch = ["tools/math3d/ray_aabb_intersection/src/**/*.rs", "tools/math3d/ray_aabb_intersection/Cargo.toml"]

[[trigger.http]]
route = "/point-line-distance"
component = "point-line-distance"

[component.point-line-distance]
source = "tools/math3d/point_line_distance/target/wasm32-wasip1/release/point_line_distance_tool.wasm"
allowed_outbound_hosts = []
[component.point-line-distance.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/math3d/point_line_distance"
watch = ["tools/math3d/point_line_distance/src/**/*.rs", "tools/math3d/point_line_distance/Cargo.toml"]

[[trigger.http]]
route = "/descriptive-statistics"
component = "descriptive-statistics"

[component.descriptive-statistics]
source = "tools/statistics/descriptive_statistics/target/wasm32-wasip1/release/descriptive_statistics_tool.wasm"
allowed_outbound_hosts = []
[component.descriptive-statistics.build]
command = "cargo build --target wasm32-wasip1 --release"
workdir = "tools/statistics/descriptive_statistics"
watch = ["tools/statistics/descriptive_statistics/src/**/*.rs", "tools/statistics/descriptive_statistics/Cargo.toml"]


