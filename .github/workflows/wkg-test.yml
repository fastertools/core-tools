name: WKG Publishing Test

# Only manual trigger for testing
on:
  workflow_dispatch:
    inputs:
      tool_name:
        description: 'Tool to test (e.g., add, multiply)'
        required: true
        default: 'add'
      dry_run:
        description: 'Dry run mode (uncheck to actually publish)'
        type: boolean
        default: true

jobs:
  test-wkg-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write  # For cosign signing
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-wasip1

      - name: Install cargo-component
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-component@0.18.0

      - name: Install wkg
        run: |
          cargo install wkg --version 0.11.0

      - name: Build component
        run: |
          cd tools/basic_math/${{ github.event.inputs.tool_name }}
          cargo component build --release
          
      - name: Setup component metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/ftl-tool-${{ github.event.inputs.tool_name }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=test-{{date 'YYYYMMDD-HHmmss'}}

      - name: Log in to GitHub Container Registry
        if: github.event.inputs.dry_run != 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish component (dry run)
        if: github.event.inputs.dry_run == 'true'
        run: |
          echo "🔍 DRY RUN: Would publish to ghcr.io/${{ github.repository_owner }}/ftl-tool-${{ github.event.inputs.tool_name }}:test"
          echo "Component path: ${{ github.workspace }}/target/wasm32-wasip1/release/${{ github.event.inputs.tool_name }}_tool.wasm"
          ls -la ${{ github.workspace }}/target/wasm32-wasip1/release/${{ github.event.inputs.tool_name }}_tool.wasm
          
          # Test wkg command syntax without auth (will fail but validates command structure)
          echo ""
          echo "Testing wkg command syntax:"
          FIRST_TAG=$(echo "ghcr.io/${{ github.repository_owner }}/ftl-tool-${{ github.event.inputs.tool_name }}:test-dry-run")
          echo "wkg oci push $FIRST_TAG ${{ github.workspace }}/target/wasm32-wasip1/release/${{ github.event.inputs.tool_name }}_tool.wasm"
          
          # Actually try the push to a test tag (will fail on auth but validates everything else)
          wkg oci push $FIRST_TAG \
            ${{ github.workspace }}/target/wasm32-wasip1/release/${{ github.event.inputs.tool_name }}_tool.wasm \
            || echo "✅ Expected auth failure in dry run - command syntax is valid"

      - name: Publish component
        if: github.event.inputs.dry_run != 'true'
        run: |
          # Get the first tag from metadata
          FIRST_TAG=$(echo "${{ steps.meta.outputs.tags }}" | head -n1)
          
          # Publish with wkg
          wkg oci push $FIRST_TAG \
            ${{ github.workspace }}/target/wasm32-wasip1/release/${{ github.event.inputs.tool_name }}_tool.wasm

      - name: Install cosign
        if: github.event.inputs.dry_run != 'true'
        uses: sigstore/cosign-installer@v3

      - name: Sign component
        if: github.event.inputs.dry_run != 'true'
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          # Get the first tag from metadata
          FIRST_TAG=$(echo "${{ steps.meta.outputs.tags }}" | head -n1)
          
          # Sign the component
          cosign sign --yes $FIRST_TAG

      - name: Test Spin consumption
        run: |
          # Install Spin
          curl -fsSL https://spin.fermyon.dev/downloads/install.sh | bash
          sudo mv spin /usr/local/bin/
          
          # Create test spin.toml
          cat > test-spin.toml << EOF
          spin_manifest_version = 2
          
          [application]
          name = "wkg-test"
          version = "0.1.0"
          
          [[trigger.http]]
          route = "/..."
          component = "test-component"
          
          [component.test-component]
          source = { registry = "ghcr.io/${{ github.repository_owner }}/ftl-tool-${{ github.event.inputs.tool_name }}:test" }
          EOF
          
          # Test if Spin can parse the component reference
          spin build --from test-spin.toml || echo "⚠️  Spin consumption test failed - this may be expected if not published yet"
          
      - name: Summary
        run: |
          echo "## WKG Publishing Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Tool**: ${{ github.event.inputs.tool_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Dry Run**: ${{ github.event.inputs.dry_run }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Registry**: ghcr.io/${{ github.repository_owner }}/ftl-tool-${{ github.event.inputs.tool_name }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ github.event.inputs.dry_run }}" == "true" ]]; then
            echo "✅ Dry run completed successfully" >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ Component published to registry" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Published Tags:" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          fi